generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
  binaryTargets   = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL")
  schemas   = ["public", "workspace"]
}

model Pokemon {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  type      String
  ability   String
  image     String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)

  @@schema("workspace")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String @default("temp_password") // adicionando um password temporário pois o banco já conta com 50 registros vindo do seed sem password. 
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  posts     Post[]
  profile   Profile?

  @@schema("workspace")
}

model Profile {
  id        Int      @id @default(autoincrement())
  bio       String?
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])

  @@schema("workspace")
}

model Post {
  id         Int            @id @default(autoincrement())
  title      String
  content    String?
  published  Boolean        @default(false)
  authorId   Int
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @default(now())
  author     User           @relation(fields: [authorId], references: [id])
  categories PostCategory[]

  @@schema("workspace")
}

model Category {
  id        Int            @id @default(autoincrement())
  name      String         @unique
  createdAt DateTime       @default(now())
  updatedAt DateTime       @default(now())
  posts     PostCategory[]

  @@schema("workspace")
}

model PostCategory {
  postId     Int
  categoryId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  category   Category @relation(fields: [categoryId], references: [id])
  post       Post     @relation(fields: [postId], references: [id])

  @@id([postId, categoryId])
  @@schema("workspace")
}

model LargeTable {
  id        Int      @id @default(autoincrement())
  name      String
  value     Float
  timestamp DateTime
  details   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@schema("workspace")
}
